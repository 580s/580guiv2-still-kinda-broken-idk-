--LOCALSCRIPT

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("[⭐]         ▬ι══════>        ( -_•)╦̵̵̿╤─ !580sLibV2 ( -_•)╦̵̵̿╤─ ", "DarkTheme")

--TABS

local Aiming = Window:NewTab("Aiming")
local AimingSection = Aiming:NewSection("Aiming")

--BUTTON / TOGGLE

AimingSection:NewButton("Streamable Aimlock", "XD", function()
 
--▄▄▄ . ▄▄▄· ▄▄▄▄▄▄▄▄ . ▐ ▄     .▄▄ · ▄▄▄▄▄▄▄▄  ▄▄▄ . ▄▄▄· • ▌ ▄ ·.  ▄▄▄· ▄▄▄▄· ▄▄▌  ▄▄▄ .
--▀▄.▀·▐█ ▀█ •██  ▀▄.▀·•█▌▐█    ▐█ ▀. •██  ▀▄ █·▀▄.▀·▐█ ▀█ ·██ ▐███▪▐█ ▀█ ▐█ ▀█▪██•  ▀▄.▀·
--▐▀▀▪▄▄█▀▀█  ▐█.▪▐▀▀▪▄▐█▐▐▌    ▄▀▀▀█▄ ▐█.▪▐▀▀▄ ▐▀▀▪▄▄█▀▀█ ▐█ ▌▐▌▐█·▄█▀▀█ ▐█▀▀█▄██▪  ▐▀▀▪▄
--▐█▄▄▌▐█ ▪▐▌ ▐█▌·▐█▄▄▌██▐█▌    ▐█▄▪▐█ ▐█▌·▐█•█▌▐█▄▄▌▐█ ▪▐▌██ ██▌▐█▌▐█ ▪▐▌██▄▪▐█▐█▌▐▌▐█▄▄▌
 --▀▀▀  ▀  ▀  ▀▀▀  ▀▀▀ ▀▀ █▪     ▀▀▀▀  ▀▀▀ .▀  ▀ ▀▀▀  ▀  ▀ ▀▀  █▪▀▀▀ ▀  ▀ ·▀▀▀▀ .▀▀▀  ▀▀▀ 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
--https://www.youtube.com/channel/UCS-j8ldcKRVeiR4NMPk5-bg
--Preview of what it looks like
 
wait(12)
--eaten-streamable
loadstring(game:HttpGet("https://raw.githubusercontent.com/T0xicJacob/eatensdad/main/eaten-streamable", true))()
--eaten-streamable
end)

--SEPERATOR

AimingSection:NewSlider("Aimlock Smoothness", "XS", 5, 0.11234451, function(s) -- 500 (MaxValue) | 0 (MinValue)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s
end)

local AimingSection = Aiming:NewSection("Silent Aim")

AimingSection:NewButton("Silent Aim", "[NO FOV CIRCLE]", function()
-- loader
if not game:IsLoaded() then 
    game.Loaded:Wait()
end
 
if not syn or not protectgui then
    getgenv().protectgui = function() end
end
 
local SilentAimSettings = {
    Enabled = true,
 
    ClassName = "Universal Silent Aim - Project Redacted",
    ToggleKey = "RightAlt",
 
    TeamCheck = true,
    VisibleCheck = false, 
    TargetPart = "HumanoidRootPart",
    SilentAimMethod = "Raycast",
 
    FOVRadius = 200,
    FOVVisible = false,
    ShowSilentAimTarget = false, 
 
    MouseHitPrediction = false,
    MouseHitPredictionAmount = 0.165,
    HitChance = 100
}
 
-- variables
getgenv().SilentAimSettings = Settings
local MainFileName = "UniversalSilentAim"
local SelectedFile, FileToSave = "", ""
 
local Camera = workspace.CurrentCamera
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local GuiService = game:GetService("GuiService")
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")
 
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
 
local GetChildren = game.GetChildren
local GetPlayers = Players.GetPlayers
local WorldToScreen = Camera.WorldToScreenPoint
local WorldToViewportPoint = Camera.WorldToViewportPoint
local GetPartsObscuringTarget = Camera.GetPartsObscuringTarget
local FindFirstChild = game.FindFirstChild
local RenderStepped = RunService.RenderStepped
local GuiInset = GuiService.GetGuiInset
local GetMouseLocation = UserInputService.GetMouseLocation
 
local resume = coroutine.resume 
local create = coroutine.create
 
local ValidTargetParts = {"Head", "HumanoidRootPart"}
local PredictionAmount = 0.165
 
local mouse_box = Drawing.new("Square")
mouse_box.Visible = true 
mouse_box.ZIndex = 999 
mouse_box.Color = Color3.fromRGB(54, 57, 241)
mouse_box.Thickness = 20 
mouse_box.Size = Vector2.new(20, 20)
mouse_box.Filled = true 
 
local fov_circle = Drawing.new("Circle")
fov_circle.Thickness = 1
fov_circle.NumSides = 100
fov_circle.Radius = 180
fov_circle.Filled = false
fov_circle.Visible = false
fov_circle.ZIndex = 999
fov_circle.Transparency = 1
fov_circle.Color = Color3.fromRGB(54, 57, 241)
 
local ExpectedArguments = {
    FindPartOnRayWithIgnoreList = {
        ArgCountRequired = 3,
        Args = {
            "Instance", "Ray", "table", "boolean", "boolean"
        }
    },
    FindPartOnRayWithWhitelist = {
        ArgCountRequired = 3,
        Args = {
            "Instance", "Ray", "table", "boolean"
        }
    },
    FindPartOnRay = {
        ArgCountRequired = 2,
        Args = {
            "Instance", "Ray", "Instance", "boolean", "boolean"
        }
    },
    Raycast = {
        ArgCountRequired = 3,
        Args = {
            "Instance", "Vector3", "Vector3", "RaycastParams"
        }
    }
}
 
function CalculateChance(Percentage)
    -- // Floor the percentage
    Percentage = math.floor(Percentage)
 
    -- // Get the chance
    local chance = math.floor(Random.new().NextNumber(Random.new(), 0, 1) * 100) / 100
 
    -- // Return
    return chance <= Percentage / 100
end
 
 
--[[file handling]] do 
    if not isfolder(MainFileName) then 
        makefolder(MainFileName);
    end
 
    if not isfolder(string.format("%s/%s", MainFileName, tostring(game.PlaceId))) then 
        makefolder(string.format("%s/%s", MainFileName, tostring(game.PlaceId)))
    end
end
 
local Files = listfiles(string.format("%s/%s", "UniversalSilentAim", tostring(game.PlaceId)))
 
-- functions
local function GetFiles() -- credits to the linoria lib for this function, listfiles returns the files full path and its annoying
	local out = {}
	for i = 1, #Files do
		local file = Files[i]
		if file:sub(-4) == '.lua' then
			-- i hate this but it has to be done ...
 
			local pos = file:find('.lua', 1, true)
			local start = pos
 
			local char = file:sub(pos, pos)
			while char ~= '/' and char ~= '\\' and char ~= '' do
				pos = pos - 1
				char = file:sub(pos, pos)
			end
 
			if char == '/' or char == '\\' then
				table.insert(out, file:sub(pos + 1, start - 1))
			end
		end
	end
 
	return out
end
 
local function UpdateFile(FileName)
    assert(FileName or FileName == "string", "oopsies");
    writefile(string.format("%s/%s/%s.lua", MainFileName, tostring(game.PlaceId), FileName), HttpService:JSONEncode(SilentAimSettings))
end
 
local function LoadFile(FileName)
    assert(FileName or FileName == "string", "oopsies");
 
    local File = string.format("%s/%s/%s.lua", MainFileName, tostring(game.PlaceId), FileName)
    local ConfigData = HttpService:JSONDecode(readfile(File))
    for Index, Value in next, ConfigData do
        SilentAimSettings[Index] = Value
    end
end
 
local function getPositionOnScreen(Vector)
    local Vec3, OnScreen = WorldToScreen(Camera, Vector)
    return Vector2.new(Vec3.X, Vec3.Y), OnScreen
end
 
local function ValidateArguments(Args, RayMethod)
    local Matches = 0
    if #Args < RayMethod.ArgCountRequired then
        return false
    end
    for Pos, Argument in next, Args do
        if typeof(Argument) == RayMethod.Args[Pos] then
            Matches = Matches + 1
        end
    end
    return Matches >= RayMethod.ArgCountRequired
end
 
local function getDirection(Origin, Position)
    return (Position - Origin).Unit * 1000
end
 
local function getMousePosition()
    return GetMouseLocation(UserInputService)
end
 
local function IsPlayerVisible(Player)
    local PlayerCharacter = Player.Character
    local LocalPlayerCharacter = LocalPlayer.Character
 
    if not (PlayerCharacter or LocalPlayerCharacter) then return end 
 
    local PlayerRoot = FindFirstChild(PlayerCharacter, Options.TargetPart.Value) or FindFirstChild(PlayerCharacter, "HumanoidRootPart")
 
    if not PlayerRoot then return end 
 
    local CastPoints, IgnoreList = {PlayerRoot.Position, LocalPlayerCharacter, PlayerCharacter}, {LocalPlayerCharacter, PlayerCharacter}
    local ObscuringObjects = #GetPartsObscuringTarget(Camera, CastPoints, IgnoreList)
 
    return ((ObscuringObjects == 0 and true) or (ObscuringObjects > 0 and false))
end
 
local function getClosestPlayer()
    if not Options.TargetPart.Value then return end
    local Closest
    local DistanceToMouse
    for _, Player in next, GetPlayers(Players) do
        if Player == LocalPlayer then continue end
        if Toggles.TeamCheck.Value and Player.Team == LocalPlayer.Team then continue end
 
        local Character = Player.Character
        if not Character then continue end
 
        if Toggles.VisibleCheck.Value and not IsPlayerVisible(Player) then continue end
 
        local HumanoidRootPart = FindFirstChild(Character, "HumanoidRootPart")
        local Humanoid = FindFirstChild(Character, "Humanoid")
        if not HumanoidRootPart or not Humanoid or Humanoid and Humanoid.Health <= 0 then continue end
 
        local ScreenPosition, OnScreen = getPositionOnScreen(HumanoidRootPart.Position)
        if not OnScreen then continue end
 
        local Distance = (getMousePosition() - ScreenPosition).Magnitude
        if Distance <= (DistanceToMouse or Options.Radius.Value or 2000) then
            Closest = ((Options.TargetPart.Value == "Random" and Character[ValidTargetParts[math.random(1, #ValidTargetParts)]]) or Character[Options.TargetPart.Value])
            DistanceToMouse = Distance
        end
    end
    return Closest
end
 
-- ui creating & handling
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xaxaxaxaxaxaxaxaxa/Libraries/main/UI's/Linoria/Source.lua"))()
 
local Window = Library:CreateWindow("Universal Silent Aim, by Project Redacted")
local GeneralTab = Window:AddTab("General")
local MainBOX = GeneralTab:AddLeftTabbox("Main") do
    local Main = MainBOX:AddTab("Main")
 
    Main:AddToggle("aim_Enabled", {Text = "Enabled"}):AddKeyPicker("aim_Enabled_KeyPicker", {Default = "RightAlt", SyncToggleState = true, Mode = "Toggle", Text = "Enabled", NoUI = false});
    Options.aim_Enabled_KeyPicker:OnClick(function()
        SilentAimSettings.Enabled = not SilentAimSettings.Enabled
 
        Toggles.aim_Enabled.Value = SilentAimSettings.Enabled
        Toggles.aim_Enabled:SetValue(SilentAimSettings.Enabled)
 
        mouse_box.Visible = SilentAimSettings.Enabled
    end)
 
    Main:AddToggle("TeamCheck", {Text = "Team Check", Default = SilentAimSettings.TeamCheck}):OnChanged(function()
        SilentAimSettings.TeamCheck = Toggles.TeamCheck.Value
    end)
    Main:AddToggle("VisibleCheck", {Text = "Visible Check", Default = SilentAimSettings.VisibleCheck}):OnChanged(function()
        SilentAimSettings.VisibleCheck = Toggles.VisibleCheck.Value
    end)
    Main:AddDropdown("TargetPart", {Text = "Target Part", Default = SilentAimSettings.TargetPart, Values = {"Head", "HumanoidRootPart", "Random"}}):OnChanged(function()
        SilentAimSettings.TargetPart = Options.TargetPart.Value
    end)
    Main:AddDropdown("Method", {Text = "Silent Aim Method", Default = SilentAimSettings.SilentAimMethod, Values = {
        "Raycast","FindPartOnRay",
        "FindPartOnRayWithWhitelist",
        "FindPartOnRayWithIgnoreList",
        "Mouse.Hit/Target"
    }}):OnChanged(function() 
        SilentAimSettings.SilentAimMethod = Options.Method.Value 
    end)
    Main:AddSlider('HitChance', {
        Text = 'Hit chance',
        Default = 100,
        Min = 0,
        Max = 100,
        Rounding = 1,
 
        Compact = false,
    })
    Options.HitChance:OnChanged(function()
        SilentAimSettings.HitChance = Options.HitChance.Value
    end)
end
 
local MiscellaneousBOX = GeneralTab:AddLeftTabbox("Miscellaneous")
local FieldOfViewBOX = GeneralTab:AddLeftTabbox("Field Of View") do
    local Main = FieldOfViewBOX:AddTab("Visuals")
 
    Main:AddToggle("Visible", {Text = "Show FOV Circle"}):AddColorPicker("Color", {Default = Color3.fromRGB(54, 57, 241)}):OnChanged(function()
        fov_circle.Visible = Toggles.Visible.Value
        SilentAimSettings.FOVVisible = Toggles.Visible.Value
    end)
    Main:AddSlider("Radius", {Text = "FOV Circle Radius", Min = 0, Max = 360, Default = 130, Rounding = 0}):OnChanged(function()
        fov_circle.Radius = Options.Radius.Value
        SilentAimSettings.FOVRadius = Options.Radius.Value
    end)
    Main:AddToggle("MousePosition", {Text = "Show Silent Aim Target"}):AddColorPicker("MouseVisualizeColor", {Default = Color3.fromRGB(54, 57, 241)}):OnChanged(function()
        mouse_box.Visible = Toggles.MousePosition.Value 
        SilentAimSettings.ShowSilentAimTarget = Toggles.MousePosition.Value 
    end)
    local PredictionTab = MiscellaneousBOX:AddTab("Prediction")
    PredictionTab:AddToggle("Prediction", {Text = "Mouse.Hit/Target Prediction"}):OnChanged(function()
        SilentAimSettings.MouseHitPrediction = Toggles.Prediction.Value
    end)
    PredictionTab:AddSlider("Amount", {Text = "Prediction Amount", Min = 0.165, Max = 1, Default = 0.165, Rounding = 3}):OnChanged(function()
        PredictionAmount = Options.Amount.Value
        SilentAimSettings.MouseHitPredictionAmount = Options.Amount.Value
    end)
end
 
local CreateConfigurationBOX = GeneralTab:AddRightTabbox("Create Configuration") do 
    local Main = CreateConfigurationBOX:AddTab("Create Configuration")
 
    Main:AddInput("CreateConfigTextBox", {Default = "", Numeric = false, Finished = false, Text = "Create Configuration to Create", Tooltip = "Creates a configuration file containing settings you can save and load", Placeholder = "File Name here"}):OnChanged(function()
        if Options.CreateConfigTextBox.Value and string.len(Options.CreateConfigTextBox.Value) ~= "" then 
            FileToSave = Options.CreateConfigTextBox.Value
        end
    end)
 
    Main:AddButton("Create Configuration File", function()
        if FileToSave ~= "" or FileToSave ~= nil then 
            UpdateFile(FileToSave)
        end
    end)
end
 
local SaveConfigurationBOX = GeneralTab:AddRightTabbox("Save Configuration") do 
    local Main = SaveConfigurationBOX:AddTab("Save Configuration")
    Main:AddDropdown("SaveConfigurationDropdown", {Values = GetFiles(), Text = "Choose Configuration to Save"})
    Main:AddButton("Save Configuration", function()
        if Options.SaveConfigurationDropdown.Value then 
            UpdateFile(Options.SaveConfigurationDropdown.Value)
        end
    end)
end
 
local LoadConfigurationBOX = GeneralTab:AddRightTabbox("Load Configuration") do 
    local Main = LoadConfigurationBOX:AddTab("Load Configuration")
 
    Main:AddDropdown("LoadConfigurationDropdown", {Values = GetFiles(), Text = "Choose Configuration to Load"})
    Main:AddButton("Load Configuration", function()
        if table.find(GetFiles(), Options.LoadConfigurationDropdown.Value) then
            LoadFile(Options.LoadConfigurationDropdown.Value)
 
            Toggles.TeamCheck:SetValue(SilentAimSettings.TeamCheck)
            Toggles.VisibleCheck:SetValue(SilentAimSettings.VisibleCheck)
            Options.TargetPart:SetValue(SilentAimSettings.TargetPart)
            Options.Method:SetValue(SilentAimSettings.SilentAimMethod)
            Toggles.Visible:SetValue(SilentAimSettings.FOVVisible)
            Options.Radius:SetValue(SilentAimSettings.FOVRadius)
            Toggles.MousePosition:SetValue(SilentAimSettings.ShowSilentAimTarget)
            Toggles.Prediction:SetValue(SilentAimSettings.MouseHitPrediction)
            Options.Amount:SetValue(SilentAimSettings.MouseHitPredictionAmount)
            Options.HitChance:SetValue(SilentAimSettings.HitChance)
        end
    end)
end
 
resume(create(function()
    RenderStepped:Connect(function()
        if Toggles.MousePosition.Value and Toggles.aim_Enabled.Value then
            if getClosestPlayer() then 
                local Root = getClosestPlayer().Parent.PrimaryPart or getClosestPlayer()
                local RootToViewportPoint, IsOnScreen = WorldToViewportPoint(Camera, Root.Position);
                -- using PrimaryPart instead because if your Target Part is "Random" it will flicker the square between the Target's Head and HumanoidRootPart (its annoying)
 
                mouse_box.Visible = IsOnScreen
                mouse_box.Position = Vector2.new(RootToViewportPoint.X, RootToViewportPoint.Y)
            else 
                mouse_box.Visible = false 
                mouse_box.Position = Vector2.new()
            end
        end
 
        if Toggles.Visible.Value then 
            fov_circle.Visible = Toggles.Visible.Value
            fov_circle.Color = Options.Color.Value
            fov_circle.Position = getMousePosition()
        end
    end)
end))
 
-- hooks
local oldNamecall
oldNamecall = hookmetamethod(game, "__namecall", newcclosure(function(...)
    local Method = getnamecallmethod()
    local Arguments = {...}
    local self = Arguments[1]
    local chance = CalculateChance(SilentAimSettings.HitChance)
    if Toggles.aim_Enabled.Value and self == workspace and not checkcaller() and chance == true then
        if Method == "FindPartOnRayWithIgnoreList" and Options.Method.Value == Method then
            if ValidateArguments(Arguments, ExpectedArguments.FindPartOnRayWithIgnoreList) then
                local A_Ray = Arguments[2]
 
                local HitPart = getClosestPlayer()
                if HitPart then
                    local Origin = A_Ray.Origin
                    local Direction = getDirection(Origin, HitPart.Position)
                    Arguments[2] = Ray.new(Origin, Direction)
 
                    return oldNamecall(unpack(Arguments))
                end
            end
        elseif Method == "FindPartOnRayWithWhitelist" and Options.Method.Value == Method then
            if ValidateArguments(Arguments, ExpectedArguments.FindPartOnRayWithWhitelist) then
                local A_Ray = Arguments[2]
 
                local HitPart = getClosestPlayer()
                if HitPart then
                    local Origin = A_Ray.Origin
                    local Direction = getDirection(Origin, HitPart.Position)
                    Arguments[2] = Ray.new(Origin, Direction)
 
                    return oldNamecall(unpack(Arguments))
                end
            end
        elseif (Method == "FindPartOnRay" or Method == "findPartOnRay") and Options.Method.Value:lower() == Method:lower() then
            if ValidateArguments(Arguments, ExpectedArguments.FindPartOnRay) then
                local A_Ray = Arguments[2]
 
                local HitPart = getClosestPlayer()
                if HitPart then
                    local Origin = A_Ray.Origin
                    local Direction = getDirection(Origin, HitPart.Position)
                    Arguments[2] = Ray.new(Origin, Direction)
 
                    return oldNamecall(unpack(Arguments))
                end
            end
        elseif Method == "Raycast" and Options.Method.Value == Method then
            if ValidateArguments(Arguments, ExpectedArguments.Raycast) then
                local A_Origin = Arguments[2]
 
                local HitPart = getClosestPlayer()
                if HitPart then
                    Arguments[3] = getDirection(A_Origin, HitPart.Position)
 
                    return oldNamecall(unpack(Arguments))
                end
            end
        end
    end
    return oldNamecall(...)
end))
 
local oldIndex = nil 
oldIndex = hookmetamethod(game, "__index", newcclosure(function(self, Index)
    if self == Mouse and not checkcaller() and Toggles.aim_Enabled.Value and Options.Method.Value == "Mouse.Hit/Target" and getClosestPlayer() then
        local HitPart = getClosestPlayer()
 
        if Index == "Target" or Index == "target" then 
            return HitPart
        elseif Index == "Hit" or Index == "hit" then 
            return ((Toggles.Prediction.Value and (HitPart.CFrame + (HitPart.Velocity * PredictionAmount))) or (not Toggles.Prediction.Value and HitPart.CFrame))
        elseif Index == "X" or Index == "x" then 
            return self.X 
        elseif Index == "Y" or Index == "y" then 
            return self.Y 
        elseif Index == "UnitRay" then 
            return Ray.new(self.Origin, (self.Hit - self.Origin).Unit)
        end
    end
 
    return oldIndex(self, Index)
end))
end)

--SEPERATOR

AimingSection:NewSlider("SilentAim FOV Circle", "XS", 120, 1, function(s) -- 500 (MaxValue) | 0 (MinValue)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s
end)

AimingSection:NewButton("Reset FOV Circle", "Resets Fov Circle", function()
    print("Clicked")
end)

--VISUALS

local Visuals = Window:NewTab("Visuals")
local VisualsSection = Visuals:NewSection("Visuals")

--TAB2

VisualsSection:NewButton("Item ESP [NOT WORKING RN]", "Item ESP", function()
    Script: spawn(loadstring(game:HttpGet("https://pastebin.com/raw/zKjj0TQD", true)))()
end)

VisualsSection:NewButton("ESP", "ESP", function()
    getgenv().enabled = true --Toggle on/off
    getgenv().filluseteamcolor = false --Toggle fill color using player team color on/off
    getgenv().outlineuseteamcolor = false --Toggle outline color using player team color on/off
    getgenv().fillcolor = Color3.new(0, 0, 0) --Change fill color, no need to edit if using team color
    getgenv().outlinecolor = Color3.new(1, 1, 1) --Change outline color, no need to edit if using team color
    getgenv().filltrans = 0 --Change fill transparency
    getgenv().outlinetrans = 0 --Change outline transparency
     
    loadstring(game:HttpGet("https://raw.githubusercontent.com/zntly/highlight-esp/main/esp.lua"))()

end)
local VisualsSection = Visuals:NewSection("Animations")

VisualsSection:NewButton("Cartoony", "Cartoony", function()
    print("Clicked")
end)

VisualsSection:NewButton("Levitation", "Levitation", function()
    print("Clicked")
end)

VisualsSection:NewButton("Robot", "Robot", function()
    print("Clicked")
end)

VisualsSection:NewButton("Stylish", "Stylish", function()
    print("Clicked")
end)

VisualsSection:NewButton("Superhero", "Superhero", function()
    print("Clicked")
end)

VisualsSection:NewButton("Zombie", "Zombie", function()
    print("Clicked")
end)

VisualsSection:NewButton("Ninja", "Ninja", function()
    print("Clicked")
end)

VisualsSection:NewButton("Knight", "Knight", function()
    print("Clicked")
end)

VisualsSection:NewButton("Mage", "Mage", function()
    print("Clicked")
end)

VisualsSection:NewButton("Pirate", "Pirate", function()
    print("Clicked")
end)

VisualsSection:NewButton("Elder", "Elder", function()
    print("Clicked")
end)

VisualsSection:NewButton("Toy", "Toy", function()
    print("Clicked")
end)

VisualsSection:NewButton("Bubbly", "Bubbly", function()
    print("Clicked")
end)

VisualsSection:NewButton("Astronaut", "Astronaut", function()
    print("Clicked")
end)

VisualsSection:NewButton("Vampire", "Vampire", function()
    print("Clicked")
end)

VisualsSection:NewButton("Werewolf", "Werewolf", function()
    print("Clicked")
end)

VisualsSection:NewButton("Rthro", "Rthro", function()
    print("Clicked")
end)

VisualsSection:NewButton("Oldschool", "Oldschool", function()
    print("Clicked")
end)

--SEPERATOR

local LocalPlayer = Window:NewTab("LocalPlayer")
local LocalPlayerSection = LocalPlayer:NewSection("LocalPlayer")

LocalPlayerSection:NewButton("GodMode V3", "Immortality", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/cypherdh/GodMode-V3/main/script"))()
end)

LocalPlayerSection:NewButton("Fly [DONT USE IN DH PERMA BAN]", "fly.", function()
    local speed = 50
    local bodyvelocityenabled = true
     
    local Imput = game:GetService("UserInputService")
    local Plr = game.Players.LocalPlayer
    local nextmsgspd = false
    local nextmsgrc = false
    local flying = true
    local rc = 5
    local Mouse = Plr:GetMouse()
    local cn
    local cn1
    local cn2
    local cn3
    local cn4
    local currentTween
     
    local speedPart = Instance.new("Part", workspace)
    speedPart.Anchored = true
    speedPart.Transparency = 1
    speedPart.CanCollide = false
    speedPart.Size = Vector3.new(10, 25, 10)
     
    function To(position)
    if not flying then return end
    local Chr = Plr.Character
    if Chr ~= nil then
    local ts = game:GetService("TweenService")
    local char = game.Players.LocalPlayer.Character
    local hm = char.HumanoidRootPart
    local dist = (hm.Position - Mouse.Hit.p).magnitude
    local tweenspeed = dist/tonumber(speed)
    local ti = TweenInfo.new(tonumber(tweenspeed), Enum.EasingStyle.Linear)
    local tp = {CFrame = CFrame.new(position)}
    currentTween = ts:Create(hm, ti, tp)
    currentTween:Play()
    if bodyvelocityenabled == true then
    local bv = Instance.new("BodyVelocity")
    bv.Name = "BypassedFlyBodyVelocity"
    bv.Parent = hm
    bv.MaxForce = Vector3.new(100000,100000,100000)
    bv.Velocity = Vector3.new(0,0,0)
    wait(tonumber(tweenspeed))
    bv:Destroy()
    end
    end
    end
     
    cn4 = Imput.InputBegan:Connect(function(input)
        if input.KeyCode == Enum.KeyCode.F then
            flying = not flying
            for i,v in pairs(Plr.Character:GetDescendants()) do
                if v.Name == "BypassedFlyBodyVelocity" then
                    v:Destroy()
                end
            end
        end
    end)
     
    cn = Plr.Chatted:Connect(function(msg)
        if nextmsgspd then
            speed = tonumber(msg)
            nextmsgspd = false
        end
        if nextmsgrc then
            rc = tonumber(msg)
            nextmsgrc = false
        end
        if string.lower(tostring(msg)) == "set fly speed" then
            nextmsgspd = true
        end
        if string.lower(tostring(msg)) == "toggle visibility" then
            if speedPart.Transparency == 1 then
                speedPart.Transparency = .75
            else speedPart.Transparency = 1
            end
        end
        if string.lower(tostring(msg)) == "set rc" then
            nextmsgrc = true
        end
        if string.lower(tostring(msg)) == "unload fly" then
            cn:Disconnect()
            cn1:Disconnect()
            cn2:Disconnect()
            cn3:Disconnect()
            cn4:Disconnect()
            speedPart:Destroy()
            flying = false
            wait(.1)
            for i,v in pairs(Plr.Character:GetDescendants()) do
                if v.Name == "BypassedFlyBodyVelocity" then
                    v:Destroy()
                end
            end
            spawn(function()
                currentTween:Cancel()
            end)
            print("Unloaded.")
        end
    end)
     
    local mousePressed = false
     
    cn1 = Mouse.Button1Down:Connect(function()
        mousePressed = true
    end)
     
    cn2 = Mouse.Button1Up:Connect(function()
        mousePressed = false
        if currentTween then
            currentTween:Cancel()
        end
    end)
     
    local btz = 0
    cn3 = game:GetService("RunService").Heartbeat:Connect(function()
        speedPart.CFrame = CFrame.new(Plr.Character.HumanoidRootPart.Position + (Mouse.UnitRay.Direction * 15), Plr.Character.HumanoidRootPart.Position)
        if flying and mousePressed and btz >= rc then
            btz = 0
            if currentTween then
                currentTween:Cancel()
            end
            To(Plr.Character.HumanoidRootPart.Position + (Mouse.UnitRay.Direction * 50) + Vector3.new(0, 2.5, 0))
        end
        btz = btz + 1
    end)
    wait(.03)
    print("Bypassed fly loaded")
end)

LocalPlayerSection:NewButton("Speed [C]", "Lazy Macro XD", function()
--Settings
local sped = 200 -- Speed
local keybind = "c"




--The Script

yes = false
	plr = game.Players.LocalPlayer
	mouse = plr:GetMouse()
	mouse.KeyDown:connect(function(key)
		if key == keybind and yes == false then
			yes = true
			game.Players.LocalPlayer.Character.Humanoid.Name = "Humz"
			game.Players.LocalPlayer.Character.Humz.WalkSpeed = sped
			game.Players.LocalPlayer.Character.Humz.JumpPower = 50
		elseif key == keybind and yes == true then
			yes = false
			game.Players.LocalPlayer.Character.Humz.WalkSpeed = 16
			game.Players.LocalPlayer.Character.Humz.JumpPower = 50
			game.Players.LocalPlayer.Character.Humz.Name = "Humanoid"
		end
	end)
end)

--SEPERATOR

local LocalPlayerSection = LocalPlayer:NewSection("Others")

LocalPlayerSection:NewButton("Rejoin", "Doesnt work in servers on ur own.", function()
    TeleportService:Teleport(game.PlaceId,plr)
end)

LocalPlayerSection:NewButton("Reset", "Respawn", function()
    for i, v in pairs (game:GetService("Players"):GetPlayers()) do
        v.Character:FindFirstChild("Humanoid").Health = 0
    end
    
    -- This works currently of 10/19/2020
end)

LocalPlayerSection:NewButton("ChatSpy", "Chatspy", function()
--This script reveals ALL hidden messages in the default chat
 
enabled = true --chat "/spy" to toggle!
spyOnMyself = true --if true will check your messages too
public = false --if true will chat the logs publicly (fun, risky)
publicItalics = true --if true will use /me to stand out
privateProperties = { --customize private logs
	Color = Color3.fromRGB(0,255,255); 
	Font = Enum.Font.SourceSansBold;
	TextSize = 18;
}
 
 
local StarterGui = game:GetService("StarterGui")
local Players = game:GetService("Players")
local player = Players.LocalPlayer or Players:GetPropertyChangedSignal("LocalPlayer"):Wait() or Players.LocalPlayer
local saymsg = game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("SayMessageRequest")
local getmsg = game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("OnMessageDoneFiltering")
local instance = (_G.chatSpyInstance or 0) + 1
_G.chatSpyInstance = instance
 
local function onChatted(p,msg)
	if _G.chatSpyInstance == instance then
		if p==player and msg:lower():sub(1,4)=="/spy" then
			enabled = not enabled
			wait(0.3)
			privateProperties.Text = "{SPY "..(enabled and "EN" or "DIS").."ABLED}"
			StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
		elseif enabled and (spyOnMyself==true or p~=player) then
			msg = msg:gsub("[\n\r]",''):gsub("\t",' '):gsub("[ ]+",' ')
			local hidden = true
			local conn = getmsg.OnClientEvent:Connect(function(packet,channel)
				if packet.SpeakerUserId==p.UserId and packet.Message==msg:sub(#msg-#packet.Message+1) and (channel=="All" or (channel=="Team" and public==false and Players[packet.FromSpeaker].Team==player.Team)) then
					hidden = false
				end
			end)
			wait(1)
			conn:Disconnect()
			if hidden and enabled then
				if public then
					saymsg:FireServer((publicItalics and "/me " or '').."{SPY} [".. p.Name .."]: "..msg,"All")
				else
					privateProperties.Text = "{SPY} [".. p.Name .."]: "..msg
					StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
				end
			end
		end
	end
end
 
for _,p in ipairs(Players:GetPlayers()) do
	p.Chatted:Connect(function(msg) onChatted(p,msg) end)
end
Players.PlayerAdded:Connect(function(p)
	p.Chatted:Connect(function(msg) onChatted(p,msg) end)
end)
privateProperties.Text = "{SPY "..(enabled and "EN" or "DIS").."ABLED}"
StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
if not player.PlayerGui:FindFirstChild("Chat") then wait(3) end
local chatFrame = player.PlayerGui.Chat.Frame
chatFrame.ChatChannelParentFrame.Visible = true
chatFrame.ChatBarParentFrame.Position = chatFrame.ChatChannelParentFrame.Position+UDim2.new(UDim.new(),chatFrame.ChatChannelParentFrame.Size.Y)
end)

--SEPERATOR

local Settings = Window:NewTab("Settings")
local SettingsSection = Settings:NewSection("Settings")


SettingsSection:NewKeybind("GUI Toggle", "TogglesGUI", Enum.KeyCode.F, function()
	Library:ToggleUI()
end)

SettingsSection:NewLabel("Made By 580s")

LocalPlayerSection:NewToggle("No Jump Cooldown [UNTOGGLEABLE]", "NJC", function(state)
    if state then
        for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
            require(v.Stats).Cooldown = 0
        end
    else
        for i,v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
            require(v.Stats).Cooldown = 0
        end
    end
end)
